# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/xenial64"

  config.vm.define "hub" do |hub|

    # Create a public network, which allows the VM to 'take part' in the
    # office network
    hub.vm.network "public_network",
      bridge: "en6: Broadcom NetXtreme Gigabit Ethernet Controller",
      auto_config: false
    # Configure the interface with a known IP:
    hub.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
    hub.vm.provision "shell",
      run: "always",
      inline: "ifconfig enp0s8 192.168.1.241 netmask 255.255.255.0 up"

    hub.vm.synced_folder ".", "/vagrant", disabled: true
    hub.vm.boot_timeout = 0
    hub.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.memory = "1024"
    end

    hub.vm.provision "ansible" do |ansible|
      ansible.playbook = "vagrant_ubuntu_build.yml"
      ansible.vault_password_file = ".vault_password_file"
    end
  end

  config.vm.define "build" do |build|

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # build.vm.network "forwarded_port", guest: 80, host: 8080

    # Create a public network, which allows the VM to 'take part' in the
    # office network
    build.vm.network "private_network", ip: "192.168.56.4"
    build.vm.synced_folder ".", "/vagrant", disabled: false
    build.vm.boot_timeout = 0
    build.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.memory = "1024"
    end

    build.vm.provision "ansible" do |ansible|
      ansible.playbook = "vagrant_ubuntu_build.yml"
      ansible.vault_password_file = ".vault_password_file"
    end
  end

end
