---
- name: create user
  become: true
  user:
    name: "{{staff_user}}"
    createhome: yes
    shell: /bin/bash
    # set password to '*' to unlock ssh access
    password: $6$loHAn4IfYLEdMc$e0de/845DozoVAzG1rKx8eRqrBxRLnYJO746dqozpxYhxSgCfA7bI9p0KoDqNU8A0hot1zqJvMQNWM1IuJGnx1
    update_password: always
    groups: sudo
    append: yes

- name: configure shell
  become: true
  become_user: "{{item.name}}"
  copy:
    dest: "{{item.path}}/.bash_aliases"
    owner: "{{item.name}}"
    mode: "0700"
    content: |
      export EDITOR=vim
      alias ll="ls -la"
      set +o allexport
      unset MANPATH
      alias g="git"
      export LC_ALL=C.UTF-8
      export LANG=C.UTF-8

      # prompt
      function parse_git_branch {
        ref=$(git-symbolic-ref HEAD 2> /dev/null) || return
        echo "("${ref#refs/heads/}")"
      }

      export GIT_PS1_SHOWDIRTYSTATE=1
      export GIT_PS1_SHOWBRANCHREMOTE=1
      export GIT_PS1_SHOWUPSTREAM='auto'
      PS1='# \[\e[0;33;33m\]\u@\H\[\033[0;32m\]`__git_ps1` \[\e[0;33;33m\]\w \n\[\e[0m\]# '
      # Make it also work for the 'g' alias of the git command
      complete -o bashdefault -o default -o nospace -F _git g 2>/dev/null \
        || complete -o default -o nospace -F _git g

      # make sure ssh agent is running and connected
      if [ ! -S ~/.ssh/ssh_auth_sock ]; then
        eval `ssh-agent`
        ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
      fi
      export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
      ssh-add -l > /dev/null || ssh-add


  with_items:
    - name: "{{staff_user}}"
      path: "/home/{{staff_user}}"
    - name: root
      path: /root

- name: Allow 'sudo' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

- name: enable ssh access
  become: true
  authorized_key:
    user: "{{staff_user}}"
    key: "{{staff_user_key}}"
  when: staff_user_key is defined

- name: configure git
  become: true
  become_user: "{{staff_user}}"
  copy:
    dest: "/home/{{staff_user}}/.gitconfig"
    owner: "{{staff_user}}"
    mode: "0700"
    content: |
      [user]
      name = {{staff_user_fullname}}
      email = {{staff_user_email}}

      [branch]
      autosetupmerge = true
      autosetuprebase = remote

      [push]
      default = current

      [core]
      quotepath = false
      pager = "less -RciqMSj5"

      [color]
      diff = auto
      branch = auto
      status = auto

      [alias]
      m = merge --no-ff
      st = status
      ai = add -i
      ap = add -p
      d = diff
      r = remote
      dc = diff --cached
      ci = commit -v
      cia = commit -v -a
      co = checkout
      cp = cherry-pick
      l = log
      ll = log -p
      lt = log trunk..
      llt = log -p trunk..
      lm = log master..
      llm = log -p master..
      b = branch
      sm = submodule
      reha = reset --hard
      feta = fetch --all
      lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
      lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --branches --remotes
      lol = log --graph --decorate --pretty=oneline --abbrev-commit
      lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
      pure = pull --rebase
- include: vim.yml
  when: configure_vim
  tags: vim

