---
- name: install build dependencies
  apt:
    name: "{{item}}"
    state: installed
  with_items:
    - git-core
    - libusb-dev
    - libdbus-1-dev
    - libglib2.0-dev
    - libudev-dev
    - libical-dev
    - libreadline-dev
    - libdbus-glib-1-dev
    - unzip

- name: create build user
  become: true
  user:
    name: "{{build_user}}"
    createhome: yes
    shell: /bin/bash
    # set password to '*' to unlock ssh access
    password: $6$loHAn4IfYLEdMc$e0de/845DozoVAzG1rKx8eRqrBxRLnYJO746dqozpxYhxSgCfA7bI9p0KoDqNU8A0hot1zqJvMQNWM1IuJGnx1
    update_password: always
    groups: sudo
    append: yes

- name: ensure src directory exists
  file:
    dest: "{{src_dest}}"
    owner: "{{build_user}}"
    mode: "0755"
    state: directory

- name: upload custom bluez sources
  copy:
    src: "{{item}}" 
    dest: "{{src_dest}}/"
  with_items:
    - "bluez-{{bluez_version}}.tar.xz"  # http://www.kernel.org/pub/linux/bluetooth/bluez-{{bluez_version}}.tar.xz
  tags: bluez

- name: unpack custom bluez sources
  command: "tar xf bluez-{{bluez_version}}.tar.xz"
  args:
    chdir: "{{src_dest}}" 
    creates: "{{build_dir}}/README"
  tags: bluez
  become: true
  become_user: "{{build_user}}"

- name: configure sources
  command: ./configure --disable-cups --disable-monitor --disable-systemd --prefix=/usr/local
  args:
    chdir: "{{build_dir}}"
    creates: "{{build_dir}}/config.log"
  tags: bluez
  become: true
  become_user: "{{build_user}}"

- name: compile sources
  command: make -j 4
  args:
    chdir: "{{build_dir}}"
    creates: "{{build_dir}}/client/bluetoothctl"
  tags: bluez
  become: true
  become_user: "{{build_user}}"

- stat:
    path: "{{build_dir}}/client/bluetoothctl"
  register: bluez_binary
  tags: bluez

- name: get version of currently installed bluez
  command: /usr/local/bin/bluetoothctl --version
  register: custom_bluez_version
  ignore_errors: True

- name: extract bluez version number from dict
  set_fact:
    custom_bluez_version: "{{ custom_bluez_version.stdout|default('') }}"

- name: install sources
  command: make install
  args:
    chdir: "{{build_dir}}"
  tags: bluez
  become: true
  when: bluez_binary.stat.exists == True and "{{bluez_version}}" != "{{custom_bluez_version}}"
