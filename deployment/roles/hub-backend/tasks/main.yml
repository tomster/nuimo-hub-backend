---
- name: set default locale
  lineinfile:
    dest: "/etc/profile"
    line: "{{item}}{{locale}}"
  with_items:
    - "export LC_ALL="
    - "export LANG="

- name: create deployment location
  become: true
  file:
    dest: "{{backend_deploy_location}}"
    owner: "{{build_user}}"
    group: "{{run_user}}"
    mode: "0755"
    state: directory

- name: create data location
  become: true
  file:
    dest: "{{backend_data_location}}"
    owner: "{{run_user}}"
    group: "{{run_user}}"
    mode: "0750"
    state: directory

- name: give {{run_user}} access to bluez dbus
  become: true
  template:
    dest: "/etc/dbus-1/system.d/bluetooth.conf"
    owner: root
    group: root
    mode: "0644"
    src: bluetooth.conf

- name: init virtualenv in deployment location
  command: "{{python_interpreter}} -m venv venv"
  args:
    chdir: "{{backend_deploy_location}}"
    creates: "{{backend_deploy_location}}/venv/bin/python"
  become: yes
  become_user: "{{build_user}}"

- name: enable virtualenv to access the system packages
  lineinfile:
    dest: "{{backend_deploy_location}}/venv/pyvenv.cfg"
    regexp: '(include-system-site-packages = )(false)'
    line: '\1true'
    backrefs: yes

- name: Make sure pip + setuptools are uptodate
  command: "{{backend_deploy_location}}/venv/bin/pip install -U pip setuptools"
  args:
    chdir: "{{backend_deploy_location}}"
  become: yes
  become_user: "{{build_user}}"

- name: upload python requirements
  become: true
  copy:
    dest: "{{backend_deploy_location}}/requirements.txt"
    owner: "{{build_user}}"
    group: "{{run_user}}"
    mode: "0644"
    content: |
      asn1crypto==0.22.0
      cffi==1.8.3
      click==6.6
      colander==1.3.1
      cornice==1.2.1
      cryptoyaml==0.2.0
      cryptography==1.4
      idna==2.5
      iso8601==0.1.11
      PasteDeploy==1.5.2
      netifaces==0.10.4
      pyramid==1.7.3
      pytz==2016.10
      repoze.lru==0.6
      requests==2.12.4
      simplejson==3.10.0
      translationstring==1.3
      venusian==1.0
      waitress==1.0.2
      WebOb==1.7.0rc2
      zope.deprecation==4.2.0
      zope.interface==4.3.3
      https://github.com/tfriedel/python-lightify/archive/1bb1db0e7bd5b14304d7bb267e2398cd5160df46.zip
      senic_hub

- name: install application
  pip:
    virtualenv: "{{backend_deploy_location}}/venv/"
    requirements: "{{backend_deploy_location}}/requirements.txt"
    extra_args: "--pre --upgrade -i {{devpi_index_url}}"
  become: yes
  notify: restart senic_hub
  tags: update_backend

- name: initialize cryptoyaml key
  become: true
  become_user: "{{build_user}}"
  command: "{{backend_deploy_location}}/venv/bin/cryptoyaml generate_key {{backend_deploy_location}}/production.key"
  args:
    chdir: "{{backend_deploy_location}}"
    creates: "{{backend_deploy_location}}/production.key"
  environment:
    LC_ALL: "{{locale}}"
    LANG: "{{locale}}"

- name: initialize cryptoyaml settings
  become: true
  command: "{{backend_deploy_location}}/venv/bin/cryptoyaml create {{backend_deploy_location}}/production.yml.aes --keyfile {{backend_deploy_location}}/production.key"
  args:
    chdir: "{{backend_deploy_location}}"
    creates: "{{backend_deploy_location}}/production.yml.aes"
  environment:
    LC_ALL: "{{locale}}"
    LANG: "{{locale}}"

- name: enable read access to production.key
  become: true
  file:
    dest: "{{backend_deploy_location}}/production.key"
    owner: "{{run_user}}"
    group: "{{run_user}}"
    mode: "0400"

- name: enable write access to crypto settings
  become: true
  file:
    dest: "{{backend_deploy_location}}/production.yml.aes"
    owner: "{{run_user}}"
    group: "{{run_user}}"
    mode: "0644"

- name: configure supervisor
  become: yes
  template:
    src: supervisor.conf
    dest: /etc/supervisor/conf.d/senic_hub.conf
    mode: "0644"
  notify: reload supervisord

- name: create configuration file
  become: yes
  template:
    src: production.ini
    dest: "{{backend_deploy_location}}/production.ini"
    owner: "{{build_user}}"
    group: "{{run_user}}"
    mode: "0644"
  notify: restart senic_hub

# - name: ensure supervisord is running
#   service:
#     name: supervisor
#     state: running
#     enabled: true

- name: make sure we enter wifi setup mode when we boot
  file:
    path: "{{backend_data_location}}/wifi_setup_required"
    owner: "{{ run_user }}"
    group: "{{ run_user }}"
    state: touch
  when: enter_wifi_setup_mode is defined and enter_wifi_setup_mode
  notify: restart wifi_setup
